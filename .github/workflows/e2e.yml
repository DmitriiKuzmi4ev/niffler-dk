name: e2e

on:
  push:
    branches-ignore:
      - master

jobs:
  e2e-tests:
    runs-on: niffler-stage-runner
    steps:
      - name: Build and run e2e-tests
        run: |
          echo "### e2e will be here!"

  prepare:
    needs: e2e-tests
    uses: ./.github/workflows/versions.yml
    with:
      runner: niffler-stage-runner
  
  deploy-services:
    runs-on: niffler-stage-runner
    needs: prepare
    steps:
      - name: Push required props to GITHUB_ENV
        run: |
          echo "PROFILE=staging" >> $GITHUB_ENV
          echo "PREFIX=${{ vars.DOCKER_HUB_ACC }}" >> $GITHUB_ENV
          echo "VAULT_TOKEN=${{ secrets.VAULT_TOKEN }}" >> $GITHUB_ENV
          echo "AUTH_VER=${{ needs.prepare.outputs.auth-ver }}" >> $GITHUB_ENV
          echo "CURRENCY_VER=${{ needs.prepare.outputs.currency-ver }}" >> $GITHUB_ENV
          echo "GATEWAY_VER=${{ needs.prepare.outputs.gateway-ver }}" >> $GITHUB_ENV
          echo "SPEND_VER=${{ needs.prepare.outputs.spend-ver }}" >> $GITHUB_ENV
          echo "USERDATA_VER=${{ needs.prepare.outputs.userdata-ver }}" >> $GITHUB_ENV
          echo "FRONT_VER=${{ needs.prepare.outputs.front-ver }}" >> $GITHUB_ENV
          echo "FRONT_IMAGE=niffler-frontend" >> $GITHUB_ENV

      - name: Summary info
        run: |
          echo "### niffler-auth version will be used: ${{ env.PREFIX }}/niffler-auth-${{ env.PROFILE }}:${{ env.AUTH_VER }}"
          echo "### niffler-currency version will be used: ${{ env.PREFIX }}/niffler-currency-${{ env.PROFILE }}:${{ env.CURRENCY_VER }}"
          echo "### niffler-gateway version will be used: ${{ env.PREFIX }}/niffler-gateway-${{ env.PROFILE }}:${{ env.GATEWAY_VER }}"
          echo "### niffler-spend version will be used: ${{ env.PREFIX }}/niffler-spend-${{ env.PROFILE }}:${{ env.SPEND_VER }}"
          echo "### niffler-userdata version will be used: ${{ env.PREFIX }}/niffler-userdata-${{ env.PROFILE }}:${{ env.USERDATA_VER }}"
          echo "### niffler-front version will be used: ${{ env.PREFIX }}/${{ env.FRONT_IMAGE }}-${{ env.PROFILE }}:${{ env.FRONT_VER }}"

      - name: Check changes path
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            auth:
              - 'niffler-auth/**'
            currency:
              - 'niffler-currency/**'
            gateway:
              - 'niffler-gateway/**'
            spend:
              - 'niffler-spend/**'
            userdata:
              - 'niffler-userdata/**'
            frontend:
              - 'niffler-frontend/**'            
            frontend-gql:
              - 'niffler-frontend-gql/**'     

      - name: Docker login
        run: |
          docker login --username ${{ vars.DOCKER_HUB_ACC }} --password "${{ secrets.DOCKER_HUB_PASSWORD }}"

      - name: build auth & deploy to staging
        if: steps.changes.outputs.auth == 'true'
        working-directory: ./
        run: |
          pwd
          bash ./gradlew :niffler-auth:jib -Pskipjaxb -x :niffler-e-2-e-tests:test
          docker-compose -f docker-compose.ci.yml pull auth.niffler.dc
          docker-compose -f docker-compose.ci.yml stop auth.niffler.dc && docker-compose -f docker-compose.ci.yml up -d --no-deps auth.niffler.dc
          docker system prune -a -f
          echo "Deploy auth to staging done!"

      - name: build currency & deploy to staging
        if: steps.changes.outputs.currency == 'true'
        working-directory: ./
        run: |
          pwd
          bash ./gradlew :niffler-currency:jib -Pskipjaxb -x :niffler-e-2-e-tests:test
          docker-compose -f docker-compose.ci.yml pull currency.niffler.dc
          docker-compose -f docker-compose.ci.yml stop currency.niffler.dc && docker-compose -f docker-compose.ci.yml up -d --no-deps currency.niffler.dc
          docker system prune -a -f
          echo "Deploy currency to staging done!"

      - name: build gateway & deploy to staging
        if: steps.changes.outputs.gateway == 'true'
        working-directory: ./
        run: |
          pwd
          bash ./gradlew :niffler-gateway:jib -Pskipjaxb -x :niffler-e-2-e-tests:test
          docker-compose -f docker-compose.ci.yml pull gateway.niffler.dc
          docker-compose -f docker-compose.ci.yml stop gateway.niffler.dc && docker-compose -f docker-compose.ci.yml up -d --no-deps gateway.niffler.dc
          docker system prune -a -f
          echo "Deploy gateway to staging done!"

      - name: build spend & deploy to staging
        if: steps.changes.outputs.spend == 'true'
        working-directory: ./
        run: |
          pwd
          bash ./gradlew :niffler-spend:jib -Pskipjaxb -x :niffler-e-2-e-tests:test
          docker-compose -f docker-compose.ci.yml pull spend.niffler.dc
          docker-compose -f docker-compose.ci.yml stop spend.niffler.dc && docker-compose -f docker-compose.ci.yml up -d --no-deps spend.niffler.dc
          docker system prune -a -f
          echo "Deploy spend to staging done!"

      - name: build userdata & deploy to staging
        if: steps.changes.outputs.userdata == 'true'
        working-directory: ./
        run: |
          pwd
          bash ./gradlew :niffler-userdata:jib -Pskipjaxb -x :niffler-e-2-e-tests:test
          docker-compose -f docker-compose.ci.yml pull userdata.niffler.dc
          docker-compose -f docker-compose.ci.yml stop userdata.niffler.dc && docker-compose -f docker-compose.ci.yml up -d --no-deps userdata.niffler.dc
          docker system prune -a -f
          echo "Deploy userdata to staging done!"

      - name: build frontend & deploy to staging
        if: steps.changes.outputs.frontend == 'true'
        working-directory: ./
        run: |
          pwd
          bash ./niffler-frontend/docker-build.sh staging push
          docker-compose -f docker-compose.ci.yml pull frontend.niffler.dc
          docker-compose -f docker-compose.ci.yml stop frontend.niffler.dc && docker-compose -f docker-compose.ci.yml up -d --no-deps frontend.niffler.dc
          docker system prune -a -f
          echo "Deploy frontend to staging done!"

      - name: build frontend WITHOUT deploy to staging
        if: steps.changes.outputs.frontend-gql == 'true'
        working-directory: ./
        run: |
          pwd
          bash ./niffler-frontend-gql/docker-build.sh staging push
          docker-compose -f docker-compose.ci.yml pull frontend.niffler.dc
          docker-compose -f docker-compose.ci.yml stop frontend.niffler.dc && docker-compose -f docker-compose.ci.yml up -d --no-deps frontend.niffler.dc
          docker system prune -a -f
          echo "Build & push frontend-gql to staging done!"  
